#!/usr/bin/env bash

set -euo pipefail

current_script_path=${BASH_SOURCE[0]}
plugin_dir=$(dirname "$(dirname "$current_script_path")")

# shellcheck source=./lib/utils.bash
source "${plugin_dir}/lib/utils.bash"

function main () {
	mkdir -p "$ASDF_DOWNLOAD_PATH"

	declare -r script_runner_cpu="$(uname -m)"
	declare -r script_runner_os="$(uname -s)"

	if [[ "$script_runner_os" == "Darwin" ]]; then
		declare -r archive_suffix="apple-macosx.zip"
	elif [[ "$script_runner_os" == "Linux" ]]; then
		declare -r archive_suffix="unknown-linux-gnu.tar.xz"
	else
		fail "Unsupported OS: $script_runner_os"
	fi

	declare -r archive_name="${TOOL_NAME}-${ASDF_INSTALL_VERSION}-${script_runner_cpu}-${archive_suffix}"
	declare -r archive_download_path="${ASDF_DOWNLOAD_PATH}/${archive_name}"

	# Download archive to the download directory
	download_release "$ASDF_INSTALL_VERSION" "$archive_name"

	# Extract contents of archive into the download directory
	if [[ $archive_name == *.tar.xz ]]; then
		tar --extract \
			--file "$archive_download_path" \
			--directory "$ASDF_DOWNLOAD_PATH" || fail "Could not extract $archive_name"
	elif [[ $archive_name == *.zip ]]; then
		unzip \
			-o "${archive_download_path}" \
			-d "$ASDF_DOWNLOAD_PATH" >/dev/null || fail "Could not extract $archive_name"
	else
		fail "Unsupported archive format: $archive_name"
	fi

	# Remove the archive since we don't need to keep it
	rm "$archive_download_path"
}

main "$@"
